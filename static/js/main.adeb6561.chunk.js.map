{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isCreatingNewGame","currentGame","lsItem","localStorage","getItem","savedGame","JSON","parse","updateCurrentGame","_unused","console","log","color","_this2","currentColor","ourScore","theirScore","setState","baseStyles","width","height","display","margin","react_default","a","createElement","style","objectSpread","background","onClick","createNewGame","setItem","stringify","_this3","className","fontSize","_this4","newGameForm","renderCurrentGame","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.adeb6561.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\ntype Props = {\n}\ntype CurrentGame = {\n  currentColor: string,\n  ourScore: number,\n  theirScore: number\n}\ntype State = {\n  isCreatingNewGame: boolean,\n  currentGame: null | CurrentGame\n}\nclass App extends React.Component<Props, State> {\n\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      isCreatingNewGame: false,\n      currentGame: null,\n    }\n  }\n\n  componentDidMount() {\n    const lsItem = localStorage.getItem('currentGame');\n    if(typeof lsItem === 'string') {\n      try {\n        const savedGame = JSON.parse(lsItem);\n        this.updateCurrentGame(savedGame as CurrentGame);\n      } catch {\n        console.log('unable to parse local storage')\n      }\n    }\n  }\n\n  createNewGame(color: string) {\n    return () => {\n      this.updateCurrentGame({\n        currentColor: color,\n        ourScore: 0,\n        theirScore: 0\n      })\n      this.setState(\n        {isCreatingNewGame: false}\n      )\n    }\n  }\n\n  newGameForm() {\n    const baseStyles = {\n      color: 'white', width:'200px', height: '60px', display:'block', margin: '10px'\n    }\n\n    return (\n      <div>\n        <p>Which team are you?</p>\n        <button style={{background: 'red', ...baseStyles}} onClick={this.createNewGame('red')}>Red</button>\n        <button style={{background: 'black', ...baseStyles}} onClick={this.createNewGame('black')}>Black</button>\n      </div>\n    )\n  }\n\n\n  updateCurrentGame(currentGame: CurrentGame) {\n    localStorage.setItem('currentGame', JSON.stringify(currentGame));\n    this.setState((state) => {\n      return {\n        currentGame\n      }\n    })\n  }\n\n  renderCurrentGame() {\n    return (\n      <div className=\"game-container\">\n        <div style={{ height: '240px', width: '100%'}}> \n          <p style={{color: this.state.currentGame!.currentColor, fontSize: '32px'}}>Our Score</p>\n          <p style={{color: this.state.currentGame!.currentColor, fontSize: '32px'}}>{this.state.currentGame!.ourScore}</p>\n          <div className=\"goal-button-bar\">\n            <button onClick={() => this.updateCurrentGame(\n                {\n                  currentColor: this.state.currentGame!.currentColor,\n                  ourScore: this.state.currentGame!.ourScore + 1,\n                  theirScore: this.state.currentGame!.theirScore\n                }\n            )\n            } className=\"add-goal\">Add Goal!</button>\n            <button onClick={() => this.updateCurrentGame(\n                {\n                  currentColor: this.state.currentGame!.currentColor,\n                  ourScore: this.state.currentGame!.ourScore - 1,\n                  theirScore: this.state.currentGame!.theirScore\n                }\n            )\n            } className=\"remove-goal\">Remove Goal</button>\n            </div>\n        </div>\n\n        <div style={{ height: '240px', width: '100%'}}> \n          <p style={{color: 'lightgray', fontSize: '32px'}}>Their Score</p>\n          <p  style={{color: 'lightgray', fontSize: '32px'}}>{this.state.currentGame!.theirScore}</p>\n          <div className=\"goal-button-bar\">\n            <button onClick={() => this.updateCurrentGame(\n                {\n                  currentColor: this.state.currentGame!.currentColor,\n                  ourScore: this.state.currentGame!.ourScore,\n                  theirScore: this.state.currentGame!.theirScore + 1\n                }\n            )\n            } className=\"add-goal\">Add Goal!</button>\n            <button onClick={() => this.updateCurrentGame(\n                {\n                  currentColor: this.state.currentGame!.currentColor,\n                  ourScore: this.state.currentGame!.ourScore,\n                  theirScore: this.state.currentGame!.theirScore  - 1\n                }\n            )\n            } className=\"remove-goal\">Remove Goal</button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Lonestar Score Tracker</h1>\n          <p>\n            You can use this app to help keep score during a game\n          </p>\n        </header>\n        <div>\n          <button onClick={() => this.setState({isCreatingNewGame: true})}>New Game</button>\n        </div>\n\n        {this.state.isCreatingNewGame && this.newGameForm()}\n        {this.state.currentGame !== null && this.renderCurrentGame()}\n\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}